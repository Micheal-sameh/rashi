{
  "swagger": "2.0",
  "info": {
    "title": "My API",
    "description": "API documentation for my Laravel app",
    "version": "1.0.0"
  },
  "host": "41.130.162.205:2100",
  "basePath": "/api",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your Bearer token in the format `Bearer <your_token>`"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "post login for user",
        "description": "login for user.",
        "parameters": [
          {
            "name": "qr_code",
            "required": true,
            "type": "string",
            "description": "the string result from scanning the qr code"
          }
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "post logout for user",
        "description": "logout for user.",
        "parameters": []
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "users index page",
        "description": "login for user.",
        "parameters": []
      }
    },
    "/users/{id}/show": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "user show page",
        "description": "user show page.",
        "parameters": []
      }
    },
    "/users/profile-pic": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "update profile pic",
        "description": "login for user.",
        "parameters": [
          {
            "name": "image",
            "required": true,
            "type": "string",
            "description": "image , mimes:png,jpg,jpeg"
          }
        ]
      }
    },
    "/competitions": {
      "get": {
        "tags": [
          "Competition"
        ],
        "summary": "Competitions index",
        "description": "Competitions index.",
        "parameters": []
      }
    },
    "/quizzes": {
      "get": {
        "tags": [
          "Quiz"
        ],
        "summary": "quizzes index",
        "description": "quizzes index.",
        "parameters": [
          {
            "name": "competition_id",
            "required": true,
            "type": "integer",
            "description": "competition you want to see quizzes of"
          }
        ]
      }
    },
    "/questions": {
      "get": {
        "tags": [
          "Questition"
        ],
        "summary": "questitions index",
        "description": "Questitions index.",
        "parameters": [
          {
            "name": "quiz_id",
            "required": true,
            "type": "integer",
            "description": "quiz you want to see questions of"
          }
        ]
      }
    },
    "/user-answers": {
      "post": {
        "tags": [
          "User-Answer"
        ],
        "summary": "user answers for quiz",
        "description": "user answers for quiz.",
        "parameters": [
          {
            "name": "quiz_id",
            "required": true,
            "type": "integer",
            "description": "quiz you post its answers"
          },
          {
            "name": "questions",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "question_id": {
                    "type": "integer"
                  },
                  "answer_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "question_id",
                  "answer_id"
                ]
              }
            },
            "description": "Quiz you post its answers"
          }
        ]
      }
    },
    "/rewards": {
      "get": {
        "tags": [
          "Reward"
        ],
        "summary": "rewards index",
        "description": "rewards index.",
        "parameters": [
        ]
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "orders index",
        "description": "orders index.",
        "parameters": [
        ]
      }
    },
    "/orders/": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "create new order",
        "description": "create new order.",
        "parameters": [
          {
            "name": "reward_id",
            "required": true,
            "type": "integer",
            "description": "id of the reward that the user want to redeem"
          },
          {
            "name": "quantity",
            "required": true,
            "type": "integer",
            "description": "quantity the user want to redeem"
          }
        ]
      }
    },
    "/user": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get authenticated user",
        "description": "Get the currently authenticated user.",
        "parameters": []
      }
    },
    "/users/leaderboard": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get users leaderboard",
        "description": "Get the leaderboard of users.",
        "parameters": []
      }
    },
    "/orders/my-orders": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get user's orders",
        "description": "Get the authenticated user's orders.",
        "parameters": []
      }
    },
    "/bonus-penalties": {
      "get": {
        "tags": [
          "BonusPenalty"
        ],
        "summary": "Get bonus penalties",
        "description": "Get list of bonus penalties, optionally filtered by user_id.",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "type": "integer",
            "description": "Filter by user ID"
          }
        ]
      }
    },
    "/bonus-penalties/{id}": {
      "get": {
        "tags": [
          "BonusPenalty"
        ],
        "summary": "Get bonus penalty by ID",
        "description": "Get a specific bonus penalty.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Bonus penalty ID"
          }
        ]
      }
    },
    "/fcm-tokens": {
      "post": {
        "tags": [
          "FCM Token"
        ],
        "summary": "Store FCM token",
        "description": "Store or update FCM token for the user.",
        "parameters": [
          {
            "name": "token",
            "required": true,
            "type": "string",
            "description": "FCM token"
          },
          {
            "name": "device_type",
            "required": true,
            "type": "string",
            "description": "Device type"
          }
        ]
      },
      "delete": {
        "tags": [
          "FCM Token"
        ],
        "summary": "Delete FCM token",
        "description": "Delete FCM token for the user.",
        "parameters": [
          {
            "name": "token",
            "required": true,
            "type": "string",
            "description": "FCM token to delete"
          }
        ]
      }
    },
    "/notifications": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Get user notifications",
        "description": "Get notifications for the authenticated user.",
        "parameters": []
      }
    },
    "/notifications/{id}/read": {
      "put": {
        "tags": [
          "Notification"
        ],
        "summary": "Mark notification as read",
        "description": "Mark a specific notification as read.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Notification ID"
          }
        ]
      }
    },
    "/notifications/mark-all-read": {
      "put": {
        "tags": [
          "Notification"
        ],
        "summary": "Mark all notifications as read",
        "description": "Mark all notifications as read for the user.",
        "parameters": []
      }
    },
    "/quizzes/dropdown/{id}": {
      "get": {
        "tags": [
          "Quiz"
        ],
        "summary": "Get quizzes dropdown",
        "description": "Get quizzes for a competition in dropdown format.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Competition ID"
          }
        ]
      }
    },
    "/versions": {
      "get": {
        "tags": [
          "Setting"
        ],
        "summary": "Get app versions",
        "description": "Get iOS and Android app versions.",
        "parameters": []
      }
    }
  }
}